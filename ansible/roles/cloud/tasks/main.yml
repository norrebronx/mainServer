---
- name: create "{{ sharegroup }}" group
  group:
    name: "{{ sharegroup }}"
    gid: "{{ sharegid }}"
    state: present 

- name: create "{{ shareuser }}" user
  user:
    name: "{{ shareuser }}" 
    createhome: no 
    groups: "{{ sharegroup }}"
    uid: "{{ shareuid }}"
    append: yes
    state: present 
  register: newuser

- name: generate random password for user only on creation
  shell: /usr/bin/openssl rand -base64 32 | passwd --stdin {{ shareuser }}
  when: newuser.changed

- name: Mount disks
  mount:
    path: "{{ item.path }}"
    src: UUID={{ item.UUID }}
    fstype: ext4
    opts: defaults
    state: mounted
  with_items:
    "{{ mount_paths }}"

- name: Creates directories
  file: path={{ item }} state=directory
  with_items:
    "{{ path_to_create }}"

- name: Ensure selinux python bindings are installed
  yum:
    name: libselinux-python
    state: present 

- name: Install samba
  yum:
    name: samba
    state: present

- name: Install samba
  yum:
    name: samba-client
    state: present

- name: Install samba
  yum:
    name: samba-common
    state: present

- service:
    name: wpa_supplicant
    enabled: no

# duck DNS
- name: create duckdns file
  template:
    src: duck.sh.j2
    dest: /opt/scripts/duck.sh
    owner: root
    group: root
    mode: 0700

- name: update duckdns
  cron:
    name: "update duckdns"
    minute: "0"
    hour: "2"
    job: "/opt/scripts/duck.sh"

# Backup
- name: install the latest version of rsync
  yum:
    name: rsync
    state: latest

- name: create make_incremental_backup file
  template:
    src: make_incremental_backup.sh.j2
    dest: /opt/scripts/make_incremental_backup.sh
    owner: root
    group: root
    mode: 0700

- name: create make_full_backup file
  template:
    src: make_full_backup.sh.j2
    dest: /opt/scripts/make_full_backup.sh
    owner: root
    group: root
    mode: 0700            

- name: daily incremental backup
  cron:
    name: "daily incremental backup"
    weekday: 0,1,3,4,5,6
    minute: "0"
    hour: "3"
    job: "/opt/scripts/make_incremental_backup.sh >> /var/log/backup_i_`date +%F`.log "

- name: rotate backup
  cron:
    name: "full backup"
    minute: "0"
    hour: "3"
    weekday: 2
    job: "/opt/scripts/make_full_backup.sh >> /var/log/backup_f_`date +%F`.log "
